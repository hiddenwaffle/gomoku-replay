{"version":3,"sources":["elements.js","event-bus.js","model.js","move-selector.js","draw.js","reader.js","file-selector.js","game-name.js","speed.js","main.js"],"names":["SMU_RED","SMU_BLUE","canvas","document","getElementById","ctx","getContext","gameNameDiv","gameNameFancyDiv","blueNameSpan","redNameSpan","messageDiv","fileUpload","playButton","pauseButton","rangeContainer","moveSelector","speedDiv","EventBus","handlers","Map","type","handler","get","set","push","event","eventBus","model","gameName","currentMoveIndex","moves","boardSize","delay","clear","addMove","move","currentMove","setCurrentMove","index","moveCount","length","setGameName","value","isEnd","recalculateBoardSize","setDelay","advancer","userDragging","init","register","resetAndPlay","keyLeft","keyRight","keyPause","speedChanged","addEventListener","play","pause","updateCurrentMove","target","code","preventDefault","max","disabled","fire","increment","delta","parseInt","clearInterval","showPlayButton","setInterval","visible","style","display","draw","getCellSize","Math","floor","height","drawCellBoundary","row","col","cellSize","strokeRect","drawCell","fillStyle","beginPath","ellipse","PI","fill","strokeStyle","stroke","clearRect","width","entries","symbols","applyLines","lines","errors","line","matchResults","match","split","includes","trim","console","error","alert","parse","text","read","file","reader","FileReader","readyState","DONE","result","readAsText","handleFileSelect","files","tmp","createElement","body","appendChild","focus","removeChild","reset","displayGameName","sliderChanged","setInnerTexts","red","blue","winner","numMoves","elapsed","maxTime","message","color","innerText","DEFAULT_DELAY","handleFileRead","handleKeyDown","handleBlur","setPlaybackSpeed","dataset","execCommand","blur","stopPropagation","entered","asNumber","parseFloat","playbackSpeed","toFixed","resizeHandler","window","innerHeight"],"mappings":";AAeO,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,SAAA,QAAA,aAAA,QAAA,eAAA,QAAA,YAAA,QAAA,WAAA,QAAA,WAAA,QAAA,WAAA,QAAA,YAAA,QAAA,aAAA,QAAA,iBAAA,QAAA,YAAA,QAAA,IAAA,QAAA,OAAA,QAAA,SAAA,QAAA,aAAA,EAfA,IAAMA,EAAU,UAehB,QAAA,QAAA,EAdA,IAAMC,EAAW,UAcjB,QAAA,SAAA,EAZA,IAAMC,EAASC,SAASC,eAAe,UAYvC,QAAA,OAAA,EAXA,IAAMC,EAAMH,EAAOI,WAAW,MAW9B,QAAA,IAAA,EAVA,IAAMC,EAAcJ,SAASC,eAAe,aAU5C,QAAA,YAAA,EATA,IAAMI,EAAmBL,SAASC,eAAe,mBASjD,QAAA,iBAAA,EARA,IAAMK,EAAeN,SAASC,eAAe,aAQ7C,QAAA,aAAA,EAPA,IAAMM,EAAcP,SAASC,eAAe,YAO5C,QAAA,YAAA,EANA,IAAMO,EAAaR,SAASC,eAAe,WAM3C,QAAA,WAAA,EALA,IAAMQ,EAAaT,SAASC,eAAe,eAK3C,QAAA,WAAA,EAJA,IAAMS,EAAaV,SAASC,eAAe,eAI3C,QAAA,WAAA,EAHA,IAAMU,EAAcX,SAASC,eAAe,gBAG5C,QAAA,YAAA,EAFA,IAAMW,EAAiBZ,SAASC,eAAe,mBAE/C,QAAA,eAAA,EADA,IAAMY,EAAeb,SAASC,eAAe,iBAC7C,QAAA,aAAA,EAAA,IAAMa,EAAWd,SAASC,eAAe,SAAzC,QAAA,SAAA;;ACaA,aAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,cAAA,EA5BDc,IAAAA,EAAAA,WACU,SAAA,IAAA,EAAA,KAAA,GACPC,KAAAA,SAAW,IAAIC,IA0BjB,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,WAvBIC,MAAAA,SAAAA,EAAMC,GACTH,IAAAA,EAAW,KAAKA,SAASI,IAAIF,GAC5BF,IACHA,EAAW,GACNA,KAAAA,SAASK,IAAIH,EAAMF,IAE1BA,EAASM,KAAKH,KAiBX,CAAA,IAAA,OAdAI,MAAAA,SAAAA,GAEGP,IAAAA,EAAW,KAAKA,SAASI,IAAIG,GAC/BP,GAAAA,EAAU,CAAA,IAAA,GAAA,EAAA,GAAA,EAAA,OAAA,EAAA,IACQA,IAAAA,IAAU,EAAVA,EAAAA,EAAU,OAAA,cAAA,GAAA,EAAA,EAAA,QAAA,MAAA,GAAA,EAAA,EAC5BG,EAD4B,EAAA,OACpBI,IAFE,MAAA,GAAA,GAAA,EAAA,EAAA,EAAA,QAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,SAWX,EA5BDR,GA4BOS,EAAW,IAAIT,EAArB,QAAA,SAAA;;ACuCN,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,MAAA,EAAA,QAAA,QAAA,EAAA,QAAA,YAAA,EAAA,QAAA,eAAA,EAAA,QAAA,UAAA,EAAA,QAAA,SAAA,EAAA,QAAA,YAAA,EAAA,QAAA,MAAA,EAAA,QAAA,qBAAA,EAAA,QAAA,MAAA,EAAA,QAAA,SAAA,EAAA,QAAA,UAAA,EA7DD,IAAMU,EAAQ,CAEZC,SAAU,KACVC,iBAAkB,KAClBC,MAAO,GACPC,UAAW,GACXC,MAAO,KAGF,SAASC,IAEdN,EAAME,iBAAmB,KACzBF,EAAMG,MAAQ,GAGT,SAASI,EAAQC,GACtBR,EAAMG,MAAMN,KAAKW,GAGZ,SAASC,IACPT,OAAAA,EAAMG,MAAMH,EAAME,kBAGpB,SAASQ,EAAeC,GAC7BX,EAAME,iBAAmBS,EAGpB,SAASC,IACPZ,OAAAA,EAAMG,MAAMU,OAGd,SAASZ,IACPD,OAAAA,EAAMC,SAGR,SAASa,EAAYC,GAC1Bf,EAAMC,SAAWc,EAGZ,SAASC,IACPhB,OAAAA,EAAME,kBAAoBF,EAAMG,MAAMU,OAAS,EAGjD,SAASI,IACVb,IAAAA,EAAY,GACZJ,EAAMG,MAAMU,OAAS,IACvBT,EAAYJ,EAAMG,MAAM,GAAGU,OAAS,GAEtCb,EAAMI,UAAYA,EAGb,SAASC,IACPL,OAAAA,EAAMK,MAGR,SAASa,EAASH,GACvBf,EAAMK,MAAQU,EAGT,SAASX,IACPJ,OAAAA,EAAMI;;AC8Dd,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,KAAA,EAhID,IAAA,EAAA,QAAA,cAKA,EAAA,QAAA,eACA,EAAA,QAAA,WAMIe,EAAW,KACXC,GAAe,EAEZ,SAASC,IACLC,EAAAA,SAAAA,SAAS,YAAaC,GACtBD,EAAAA,SAAAA,SAAS,WAAYE,GACrBF,EAAAA,SAAAA,SAAS,YAAaG,GACtBH,EAAAA,SAAAA,SAAS,YAAaI,GACtBJ,EAAAA,SAAAA,SAAS,gBAAiBK,GACxBC,EAAAA,WAAAA,iBAAiB,QAASC,GACzBD,EAAAA,YAAAA,iBAAiB,QAASE,GACzBF,EAAAA,aAAAA,iBAAiB,SAAU,WACtCR,GAAe,IAEJQ,EAAAA,aAAAA,iBAAiB,QAAS,SAAC9B,GACtCsB,GAAe,EACfW,EAAkBjC,EAAMkC,OAAOjB,SAEpBa,EAAAA,aAAAA,iBAAiB,UAAW,SAAC9B,GAGrB,cAAfA,EAAMmC,MACS,eAAfnC,EAAMmC,MACRnC,EAAMoC,mBAKZ,SAASX,EAAazB,GACdqC,IAAAA,GAAM,EAAc,EAAA,aAAA,EACbA,EAAAA,aAAAA,IAAMA,EACNC,EAAAA,aAAAA,UAAW,EACXrB,EAAAA,aAAAA,MAAQ,EACrBgB,EAAkB,GAClBF,IAGF,SAASE,EAAkBhB,IACVA,EAAAA,EAAAA,gBAAAA,GACNsB,EAAAA,SAAAA,KAAK,wBAMhB,SAASC,EAAUC,GACbnB,IACSL,EAAAA,aAAAA,MAAQyB,SAASpD,EAAa2B,aAAAA,OAASwB,EAChDC,SAASpD,EAAa2B,aAAAA,QAAUyB,SAASpD,EAAa+C,aAAAA,OACxDM,cAActB,GACdA,EAAW,KACXuB,GAAe,IAEjBX,EAAkB3C,EAAa2B,aAAAA,QAGjC,SAASc,IACHV,IACFsB,cAActB,GACdA,EAAW,MAGT/B,EAAa2B,aAAAA,QAAU3B,EAAa+C,aAAAA,MACzBpB,EAAAA,aAAAA,MAAQ,EACrBgB,EAAkB3C,EAAa2B,aAAAA,QAEjCI,EAAWwB,YAAY,WAAQL,EAAU,KAAM,EAAzB,EAAA,UACtBI,GAAe,GAMjB,SAASZ,IACHX,IACFsB,cAActB,GACdA,EAAW,MAEbuB,GAAe,GAMjB,SAASA,EAAeE,GACXC,EAAAA,WAAAA,MAAMC,QAAUF,EAAU,SAAW,OACpCC,EAAAA,YAAAA,MAAMC,QAAUF,EAAU,OAAS,SAGjD,SAASpB,IACFpC,EAAagD,aAAAA,UAChBE,GAAW,GAIf,SAASb,IACFrC,EAAagD,aAAAA,UAChBE,EAAU,GAId,SAASZ,IACFtC,EAAagD,aAAAA,WACZjB,EACFW,IAEAD,KAKN,SAASF,IACHR,IAAa/B,EAAagD,aAAAA,WAC5BN,IACAD;;ACtDH,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,KAAA,EAAA,QAAA,KAAA,EAxED,IAAA,EAAA,QAAA,cAMA,EAAA,QAAA,eACA,EAAA,QAAA,WAiEC,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wDAAA,SAAA,EAAA,EAAA,GAAA,GAAA,OAAA,YAAA,OAAA,IAAA,uBAAA,OAAA,UAAA,SAAA,KAAA,GAAA,CAAA,IAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,OAAA,EAAA,IAAA,IAAA,IAAA,EAAA,EAAA,EAAA,OAAA,cAAA,GAAA,EAAA,EAAA,QAAA,QAAA,EAAA,KAAA,EAAA,QAAA,GAAA,EAAA,SAAA,GAAA,GAAA,IAAA,MAAA,GAAA,GAAA,EAAA,EAAA,EAAA,QAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,GAAA,OAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EA5DM,SAASR,IACLC,EAAAA,SAAAA,SAAS,iBAAkByB,GAC3BzB,EAAAA,SAAAA,SAAS,YAAayB,GACtBzB,EAAAA,SAAAA,SAAS,uBAAwByB,GAO5C,SAASC,IACAC,OAAAA,KAAKC,MAAM5E,EAAO6E,OAAAA,QAAS,EAA3B,EAAA,cAA6C,EAGtD,SAASC,EAAiBC,EAAKC,EAAKC,GAC9BC,EAAAA,IAAAA,WAAWF,EAAMC,EAAW,GAC9BF,EAAME,EAAW,GACjBA,EACAA,GAGJ,SAASE,EAASJ,EAAKC,EAAKvC,EAAOwC,GACnB,MAAVxC,IACE2C,EAAAA,IAAAA,UAAqB,KAAT3C,EAAe3C,EAAf,QAAyBC,EAAzC,SACIsF,EAAAA,IAAAA,YACAC,EAAAA,IAAAA,QAAQN,EAAMC,EAAYA,EAAW,EAC7BF,EAAME,EAAYA,EAAW,EAC7BA,EAAW,EAAI,EACfA,EAAW,EAAI,EACfN,KAAKY,GAAK,EAAG,EAAG,EAAIZ,KAAKY,IACjCC,EAAAA,IAAAA,OACAC,EAAAA,IAAAA,YAAc,QACdH,EAAAA,IAAAA,QAAQN,EAAMC,EAAYA,EAAW,EAC7BF,EAAME,EAAYA,EAAW,EAC7BA,EAAW,EAAI,EACfA,EAAW,EAAI,EACfN,KAAKY,GAAK,EAAG,EAAG,EAAIZ,KAAKY,IACjCG,EAAAA,IAAAA,UAID,SAASjB,IACVkB,EAAAA,IAAAA,UAAU,EAAG,EAAG3F,EAAO4F,OAAAA,MAAO5F,EAAO6E,OAAAA,QACnCI,IAAAA,EAAWP,IACbe,EAAAA,IAAAA,YAAc,YAEb,IADC3D,IAAAA,GAAY,EAAlB,EAAA,aACSiD,EAAM,EAAGA,EAAMjD,EAAWiD,IAC5B,IAAA,IAAIC,EAAM,EAAGA,EAAMlD,EAAWkD,IACjCF,EAAiBC,EAAKC,EAAKC,GAGzB/C,IAAAA,GAAO,EAAb,EAAA,eACIA,GAAAA,EAAM,CAAA,IAAA,GAAA,EAAA,GAAA,EAAA,OAAA,EAAA,IACmBA,IAAAA,IAAgB,EAAhBA,EAAAA,EAAK2D,UAAW,OAAA,cAAA,GAAA,EAAA,EAAA,QAAA,MAAA,GAAA,EACpC,IADoC,IAAA,EAAA,EAAA,EAAA,MAAA,GAAjCd,EAAiC,EAAA,GAA5Be,EAA4B,EAAA,GAChCd,EAAM,EAAGA,EAAMc,EAAQvD,OAAQyC,IAAO,CAE7CG,EAASJ,EAAKC,EADAc,EAAQd,GACIC,IAJtB,MAAA,GAAA,GAAA,EAAA,EAAA,EAAA,QAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA;;ACDX,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,WAAA,EAAA,QAAA,KAAA,EA/DD,IAAA,EAAA,QAAA,eACA,EAAA,QAAA,WAUO,SAASc,EAAWC,GACrBC,IAAAA,GAAS,GACb,EAAA,EAAA,SAFgC,IAAA,GAAA,EAAA,GAAA,EAAA,OAAA,EAAA,IAGfD,IAAAA,IAAO,EAAPA,EAAAA,EAAO,OAAA,cAAA,GAAA,EAAA,EAAA,QAAA,MAAA,GAAA,EAAA,CAAfE,IAAAA,EAAe,EAAA,MAChBC,EAAeD,EAAKE,MAAM,yBAC5BD,GAAuC,GAAvBA,EAAa5D,QACvB4D,EAAAA,EAAAA,SAAAA,EAAa,GAAGE,MAAM,MACrBH,EAAKI,SAAS,4BAEdJ,EAAKI,SAAS,kBACdJ,EAAKI,SAAS,qBACXJ,EAAAA,EAAAA,aAAAA,GACHnC,EAAAA,SAAAA,KAAK,sBACW,KAAhBmC,EAAKK,SAGdC,QAAQC,MAAuBP,iBAAAA,OAAAA,IAC/BD,GAAS,KAjBmB,MAAA,GAAA,GAAA,EAAA,EAAA,EAAA,QAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,GAoB5BA,GACFS,MAAM,yFArBwB,EAAA,EAAA,wBAyBvB3C,EAAAA,SAAAA,KAAK,aAUhB,SAAS4C,EAAMC,GAEbb,EADca,EAAKP,MAAM,UAOpB,SAASQ,EAAKC,GACbC,IAAAA,EAAS,IAAIC,WACnBD,EAAOzD,iBAAiB,UAAW,SAAC9B,GACzBuC,EAAAA,SAAAA,KAAK,eACVvC,EAAMkC,OAAOuD,aAAeD,WAAWE,MACzCP,EAAMnF,EAAMkC,OAAOyD,UAGvBJ,EAAOK,WAAWN;;ACtCnB,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,KAAA,EAxBD,IAAA,EAAA,QAAA,cAIA,EAAA,QAAA,YAEO,SAAS/D,IACHO,EAAAA,WAAAA,iBAAiB,SAAU+D,GAAkB,GAM1D,SAASA,EAAiB7F,IACnBA,EAAAA,EAAAA,MAAAA,EAAMkC,OAAO4D,MAAM,IAGb7E,EAAAA,WAAAA,MAAQ,GAGb8E,IAAAA,EAAMtH,SAASuH,cAAc,SACnCvH,SAASwH,KAAKC,YAAYH,GAC1BA,EAAII,QACJ1H,SAASwH,KAAKG,YAAYL;;AC0E3B,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,KAAA,EAjGD,IAAA,EAAA,QAAA,cASA,EAAA,QAAA,eACA,EAAA,QAAA,WAuFC,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wDAAA,SAAA,EAAA,EAAA,GAAA,GAAA,OAAA,YAAA,OAAA,IAAA,uBAAA,OAAA,UAAA,SAAA,KAAA,GAAA,CAAA,IAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,OAAA,EAAA,IAAA,IAAA,IAAA,EAAA,EAAA,EAAA,OAAA,cAAA,GAAA,EAAA,EAAA,QAAA,QAAA,EAAA,KAAA,EAAA,QAAA,GAAA,EAAA,SAAA,GAAA,GAAA,IAAA,MAAA,GAAA,GAAA,EAAA,EAAA,EAAA,QAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,GAAA,OAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAlFM,SAASxE,IACLC,EAAAA,SAAAA,SAAS,cAAe6E,GACxB7E,EAAAA,SAAAA,SAAS,oBAAqB8E,GAC9B9E,EAAAA,SAAAA,SAAS,uBAAwB+E,GAG5C,SAASF,IACPG,EAAc,GAAI,GAAI,IAUxB,SAASrB,EAAMT,GACPC,IAAAA,EAAeD,EAAKE,MAAM,8EAC5BD,GAAAA,GAAwC,IAAxBA,EAAa5D,OAAc,CAIvC0F,IAAAA,EAAM9B,EAAa,GACnB+B,EAAO/B,EAAa,GACpBgC,EAAShC,EAAa,GACtBiC,EAAWjC,EAAa,GACxBkC,EAAUlC,EAAa,GAStB,MAAA,CAAC8B,EAAKC,EAPE,MAAXC,EACWF,GAAAA,OAAAA,EAAeG,aAAAA,OAAAA,EAAuBC,gBAAAA,OAAAA,GAC/B,OAAXF,EACID,GAAAA,OAAAA,EAAgBE,aAAAA,OAAAA,EAAuBC,gBAAAA,OAAAA,GAEjCD,SAAAA,OAAAA,EAAuBC,gBAAAA,OAAAA,GAEhBF,GACvB,GAAIjC,EAAKI,SAAS,mBAAoB,CACrCH,IAAAA,EAAeD,EAAKE,MAAM,8DAC5BD,GAAAA,GAAuC,GAAvBA,EAAa5D,OAAa,CAItC0F,IAAAA,EAAM9B,EAAa,GACnB+B,EAAO/B,EAAa,GACpBkC,EAAUlC,EAAa,GACvBmC,EAAUnC,EAAa,GAEtB,MAAA,CAAC8B,EAAKC,EAD6CG,0CAAAA,OAAAA,EAAcC,QAAAA,OAAAA,EAAxE,SAC4B,MAIzB,MAAA,CAAC,GAAI,GAAI,GAAI,IAGtB,SAASR,IACD5B,IADmB,EAAA,EAEYS,GADxB,EAAb,EAAA,aADyB,GAElBsB,EAFkB,EAAA,GAEbC,EAFa,EAAA,GAEPK,EAFO,EAAA,GAEEJ,EAFF,EAAA,GAGb5D,EAAAA,YAAAA,MAAMC,QAAU,OACXD,EAAAA,iBAAAA,MAAMC,QAAU,QAEpBD,EAAAA,WAAAA,MAAMiE,MADJ,MAAXL,EACuBrI,EAAzB,QACoB,OAAXqI,EACgBpI,EAAzB,SAEyB,UAE3BiI,EAAcC,EAAKC,EAAMK,GAG3B,SAASP,EAAcC,EAAKC,EAAMK,GACpBE,EAAAA,YAAAA,UAAYR,EACXQ,EAAAA,aAAAA,UAAYP,EACdO,EAAAA,WAAAA,UAAYF,EAGzB,SAASR,KACH,EAAJ,EAAA,SACaxD,EAAAA,WAAAA,MAAMC,QAAU,QAEhBD,EAAAA,WAAAA,MAAMC,QAAU;;ACrC9B,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,KAAA,EA1DD,IAAA,EAAA,QAAA,cACA,EAAA,QAAA,eACA,EAAA,QAAA,WAKMkE,EAAgB,IAEf,SAAS3F,IACLC,EAAAA,SAAAA,SAAS,YAAa2F,GACtBrF,EAAAA,SAAAA,iBAAiB,UAAWsF,GAC5BtF,EAAAA,SAAAA,iBAAiB,OAAQuF,GAClCC,EAAiB,GAGnB,SAASH,EAAenH,GACbuH,EAAAA,SAAAA,QAAQjF,SAAW,QAS9B,SAAS8E,EAAcpH,GACF,WAAfA,EAAMmC,MACR1D,SAAS+I,YAAY,QACZC,EAAAA,SAAAA,QACe,UAAfzH,EAAMmC,MACS,gBAAfnC,EAAMmC,MACNsF,EAAAA,SAAAA,OACTzH,EAAM0H,kBACN1H,EAAMoC,kBACiB,SAAdpC,EAAMmC,MACfnC,EAAM0H,kBAIV,SAASL,EAAWrH,GACZ2H,IAAAA,EAAUpI,EAAS0H,SAAAA,UACnBW,EAAWC,WAAWF,GACxBC,EAAW,EACbN,EAAiBM,GAEjBnJ,SAAS+I,YAAY,QAIzB,SAASF,EAAiBQ,GAEbb,EAAAA,SAAAA,UAAea,GAAAA,OADtBA,EAAgB,EACMA,EAAcC,QAAQ,GAEtBD,EAFxB,MAIOZ,EAAAA,EAAAA,UAAAA,EAAgBY,GAChBvF,EAAAA,SAAAA,KAAK;;ACzBhB,aAhCA,IAAA,EAAA,QAAA,mBACA,EAAA,QAAA,UACA,EAAA,QAAA,cAIA,EAAA,QAAA,eACA,EAAA,QAAA,mBACA,EAAA,QAAA,eACA,EAAA,QAAA,WAYA,SAASyF,IACA5D,EAAAA,OAAAA,MAAQ5F,EAAO6E,OAAAA,OAASF,KAAKC,MAA2B,GAArB6E,OAAOC,aACpCnF,EAAAA,aAAAA,MAAMqB,MAAW5F,GAAAA,OAAAA,EAAO4F,OAAAA,MAArC,MACS7B,EAAAA,SAAAA,KAAK,mBAZhB,EAAA,EAAA,SACA,EAAA,EAAA,SACA,EAAA,EAAA,SACA,EAAA,EAAA,SACA,EAAA,EAAA,QAUA0F,OAAOnG,iBAAiB,SAAUkG,GAAe,GACjDA,IAKAC,OAAOnG,iBAAiB,UAAW,SAAC9B,GACf,cAAfA,EAAMmC,KACCI,EAAAA,SAAAA,KAAK,YACU,eAAfvC,EAAMmC,KACNI,EAAAA,SAAAA,KAAK,aACU,UAAfvC,EAAMmC,MACNI,EAAAA,SAAAA,KAAK","file":"main.26c06ca5.js","sourceRoot":"../js","sourcesContent":["export const SMU_RED = '#cc0035'\nexport const SMU_BLUE = '#354ca1'\n\nexport const canvas = document.getElementById('canvas')\nexport const ctx = canvas.getContext('2d')\nexport const gameNameDiv = document.getElementById('game-name')\nexport const gameNameFancyDiv = document.getElementById('game-name-fancy')\nexport const blueNameSpan = document.getElementById('blue-name')\nexport const redNameSpan = document.getElementById('red-name')\nexport const messageDiv = document.getElementById('message')\nexport const fileUpload = document.getElementById('file-upload')\nexport const playButton = document.getElementById('play-button')\nexport const pauseButton = document.getElementById('pause-button')\nexport const rangeContainer = document.getElementById('range-container')\nexport const moveSelector = document.getElementById('move-selector')\nexport const speedDiv = document.getElementById('speed')\n","class EventBus {\n  constructor() {\n    this.handlers = new Map()\n  }\n\n  register(type, handler) {\n    let handlers = this.handlers.get(type)\n    if (!handlers) {\n      handlers = []\n      this.handlers.set(type, handlers)\n    }\n    handlers.push(handler)\n  }\n\n  fire(event) {\n    // TODO: Prevent infinite fire() ?\n    const handlers = this.handlers.get(event)\n    if (handlers) {\n      for (let handler of handlers) {\n        handler(event)\n      }\n    }\n  }\n}\n\n// Initializion is here so that it occurs\n// before the init() in each module that\n// requires initialization.\nexport const eventBus = new EventBus()\n","// Each move state is itself an array of rows that look like:\n//  ['XXX',\n//   '..O',\n//   'XOX']\n// Moves are in order from first at [0] to last at [length-1].\n\nconst model = {\n  // These assignments should match clear()\n  gameName: null,\n  currentMoveIndex: null,\n  moves: [],\n  boardSize: 19,\n  delay: 333\n}\n\nexport function clear() {\n  // These assignments should match the initialization.\n  model.currentMoveIndex = null,\n  model.moves = []\n}\n\nexport function addMove(move) {\n  model.moves.push(move)\n}\n\nexport function currentMove() {\n  return model.moves[model.currentMoveIndex]\n}\n\nexport function setCurrentMove(index) {\n  model.currentMoveIndex = index\n}\n\nexport function moveCount() {\n  return model.moves.length\n}\n\nexport function gameName() {\n  return model.gameName\n}\n\nexport function setGameName(value) {\n  model.gameName = value\n}\n\nexport function isEnd() {\n  return model.currentMoveIndex >= model.moves.length - 1\n}\n\nexport function recalculateBoardSize() {\n  let boardSize = 19\n  if (model.moves.length > 0) {\n    boardSize = model.moves[0].length - 1\n  }\n  model.boardSize = boardSize\n}\n\nexport function delay() {\n  return model.delay\n}\n\nexport function setDelay(value) {\n  model.delay = value\n}\n\nexport function boardSize() {\n  return model.boardSize\n}\n","import {\n  moveSelector,\n  playButton,\n  pauseButton\n} from './elements'\nimport {eventBus} from './event-bus'\nimport {\n  delay as getDelay,\n  moveCount,\n  setCurrentMove\n} from './model'\n\nlet advancer = null\nlet userDragging = false\n\nexport function init() {\n  eventBus.register('file-read', resetAndPlay)\n  eventBus.register('key-left', keyLeft)\n  eventBus.register('key-right', keyRight)\n  eventBus.register('key-pause', keyPause)\n  eventBus.register('speed-changed', speedChanged)\n  playButton.addEventListener('click', play)\n  pauseButton.addEventListener('click', pause)\n  moveSelector.addEventListener('change', () => {\n    userDragging = false\n  })\n  moveSelector.addEventListener('input', (event) => {\n    userDragging = true\n    updateCurrentMove(event.target.value)\n  })\n  moveSelector.addEventListener('keydown', (event) => {\n    // In case the user hits left/right while the focus is\n    // on the selector itself -- do not double increment.\n    if (event.code === 'ArrowLeft' ||\n        event.code === 'ArrowRight') {\n      event.preventDefault()\n    }\n  })\n}\n\nfunction resetAndPlay(event) {\n  const max = moveCount() - 1 // input range is inclusive\n  moveSelector.max = max\n  moveSelector.disabled = false\n  moveSelector.value = 0\n  updateCurrentMove(0)\n  play() // advancer will be reset in this function\n}\n\nfunction updateCurrentMove(value) {\n  setCurrentMove(value)\n  eventBus.fire('current-move-changed')\n}\n\n/**\n * Also does decrements.\n */\nfunction increment(delta) {\n  if (userDragging) return // Try not to interfere with user\n  moveSelector.value = parseInt(moveSelector.value) + delta\n  if (parseInt(moveSelector.value) >= parseInt(moveSelector.max)) {\n    clearInterval(advancer)\n    advancer = null\n    showPlayButton(true)\n  }\n  updateCurrentMove(moveSelector.value)\n}\n\nfunction play() {\n  if (advancer) {\n    clearInterval(advancer)\n    advancer = null\n  }\n  // Reset if at the end\n  if (moveSelector.value === moveSelector.max) {\n    moveSelector.value = 0\n    updateCurrentMove(moveSelector.value)\n  }\n  advancer = setInterval(() => { increment(1) }, getDelay())\n  showPlayButton(false)\n}\n\n/**\n * It is ok for this function to be called multiple times in a row.\n */\nfunction pause() {\n  if (advancer) {\n    clearInterval(advancer)\n    advancer = null\n  }\n  showPlayButton(true)\n}\n\n/**\n * Toggle between play and pause\n */\nfunction showPlayButton(visible) {\n  playButton.style.display = visible ? 'inline' : 'none'\n  pauseButton.style.display = visible ? 'none' : 'inline'\n}\n\nfunction keyLeft() {\n  if (!moveSelector.disabled) {\n    increment(-1)\n  }\n}\n\nfunction keyRight() {\n  if (!moveSelector.disabled) {\n    increment(1)\n  }\n}\n\nfunction keyPause() {\n  if (!moveSelector.disabled) {\n    if (advancer) {\n      pause()\n    } else {\n      play()\n    }\n  }\n}\n\nfunction speedChanged() {\n  if (advancer && !moveSelector.disabled) {\n    pause()\n    play()\n  }\n}\n","import {\n  canvas,\n  ctx,\n  SMU_BLUE,\n  SMU_RED\n} from './elements'\nimport {eventBus} from './event-bus'\nimport {\n  currentMove,\n  boardSize as getBoardSize\n} from './model'\n\nexport function init() {\n  eventBus.register('window-resized', draw)\n  eventBus.register('file-read', draw)\n  eventBus.register('current-move-changed', draw)\n}\n\n/**\n * Scale to the canvas height. Could scale to the width\n * as well but it doesn't need to be that fancy.\n */\nfunction getCellSize() {\n  return Math.floor(canvas.height / getBoardSize()) - 1\n}\n\nfunction drawCellBoundary(row, col, cellSize) {\n  ctx.strokeRect(col * cellSize + 0.5,\n    row * cellSize + 0.5,\n    cellSize,\n    cellSize)\n}\n\nfunction drawCell(row, col, value, cellSize) {\n  if (value !== '.') {\n    ctx.fillStyle = value == 'X' ? SMU_RED : SMU_BLUE // else is O\n    ctx.beginPath()\n    ctx.ellipse(col * cellSize + (cellSize / 2),\n                row * cellSize + (cellSize / 2),\n                cellSize / 2 - 2,\n                cellSize / 2 - 2,\n                Math.PI / 4, 0, 2 * Math.PI)\n    ctx.fill()\n    ctx.strokeStyle = 'black'\n    ctx.ellipse(col * cellSize + (cellSize / 2),\n                row * cellSize + (cellSize / 2),\n                cellSize / 2 - 2,\n                cellSize / 2 - 2,\n                Math.PI / 4, 0, 2 * Math.PI)\n    ctx.stroke()\n  }\n}\n\nexport function draw() {\n  ctx.clearRect(0, 0, canvas.width, canvas.height)\n  const cellSize = getCellSize()\n  ctx.strokeStyle = 'lightgray'\n  const boardSize = getBoardSize()\n  for (let row = 0; row < boardSize; row++) {\n    for (let col = 0; col < boardSize; col++) {\n      drawCellBoundary(row, col, cellSize)\n    }\n  }\n  const move = currentMove()\n  if (move) {\n    for (let [row, symbols] of move.entries()) {\n      for (let col = 0; col < symbols.length; col++) {\n        const value = symbols[col]\n        drawCell(row, col, value, cellSize)\n      }\n    }\n  }\n}\n","import {eventBus} from './event-bus'\nimport {\n  clear,\n  addMove,\n  setGameName,\n  recalculateBoardSize\n} from './model'\n\n/**\n * Testing Delete Me\n */\nexport function applyLines(lines) {\n  let errors = false\n  clear()\n  for (let line of lines) {\n    const matchResults = line.match(/ - DEBUG - ([X.O|]+)$/)\n    if (matchResults && matchResults.length == 2) {\n      addMove(matchResults[1].split('|')) // Use [1] because [0] is the full string.\n    } else if (line.includes('INFO - Game Board Size')) {\n      // Ignore\n    } else if (line.includes('INFO - Winner') ||\n               line.includes('INFO - TIE GAME')) { // Last minute change for ties\n      setGameName(line)\n      eventBus.fire('game-name-updated')\n    } else if (line.trim() === '') {\n      // Ignore\n    } else {\n      console.error(`Unknown line: ${line}`)\n      errors = true\n    }\n  }\n  if (errors) {\n    alert('There were errors reading the file. This might cause the game ' +\n          'to render incorrectly.')\n  }\n  recalculateBoardSize() // In case it is not 19x19\n  eventBus.fire('file-read')\n}\n\n/**\n * There are three types of log lines output by the\n * play_one_on_one_v3.py file:\n *   1) The board size. This is ignored.\n *   2) A board state. This is parsed for display.\n *   3) Winner. This is parsed for display.\n */\nfunction parse(text) {\n  const lines = text.split(/\\r?\\n/)\n  applyLines(lines)\n}\n\n/**\n * Replace the model with the file contents.\n */\nexport function read(file) {\n  const reader = new FileReader()\n  reader.addEventListener('loadend', (event) => {\n    eventBus.fire('file-opened')\n    if (event.target.readyState === FileReader.DONE) {\n      parse(event.target.result)\n    }\n  })\n  reader.readAsText(file)\n}\n","import {\n  canvas,\n  fileUpload,\n} from './elements'\nimport {read} from './reader'\n\nexport function init() {\n  fileUpload.addEventListener('change', handleFileSelect, false)\n}\n\n/**\n * Allow user to upload a log file.\n */\nfunction handleFileSelect(event) {\n  read(event.target.files[0])\n  // Workaround for if the user re-uploads the same file name.\n  // https://stackoverflow.com/a/34529205\n  fileUpload.value = ''\n  // Prevent spacebar from re-opening the file dialog.\n  // Hack: https://stackoverflow.com/a/29237391\n  const tmp = document.createElement('input')\n  document.body.appendChild(tmp)\n  tmp.focus()\n  document.body.removeChild(tmp)\n}\n","import {\n  SMU_RED,\n  SMU_BLUE,\n  gameNameDiv,\n  gameNameFancyDiv,\n  redNameSpan,\n  blueNameSpan,\n  messageDiv\n} from './elements'\nimport {eventBus} from './event-bus'\nimport {\n  gameName as getGameName,\n  isEnd\n} from './model'\n\nexport function init() {\n  eventBus.register('file-opened', reset)\n  eventBus.register('game-name-updated', displayGameName)\n  eventBus.register('current-move-changed', sliderChanged)\n}\n\nfunction reset() {\n  setInnerTexts('', '', '')\n}\n\n/**\n * Example log line:\n * 2020-03-07 11:23:10,913 - bob.v.alice - INFO - Winner: 1 in 15 moves time= 0.650 secs\n * Assumptions:\n *  - 'bob' is red/X\n *  - 'alice' is blue/O\n */\nfunction parse(line) {\n  const matchResults = line.match(/^(.*) (.*) - (.*)\\.v\\.(.*) - INFO - Winner: (.*) in (.*) moves time= (.*)$/)\n  if (matchResults && matchResults.length === 8) {\n    // Remember [0] is the whole string again\n    //          [1] is just the log date\n    //          [2] is just the log time\n    const red = matchResults[3]\n    const blue = matchResults[4]\n    const winner = matchResults[5] // 1, -1, or 0\n    const numMoves = matchResults[6]\n    const elapsed = matchResults[7]\n    let message\n    if (winner === '1') {\n      message = `${red} wins in ${numMoves} moves over ${elapsed}`\n    } else if (winner === '-1') {\n      message = `${blue} wins in ${numMoves} moves over ${elapsed}`\n    } else {\n      message = `TIE - ${numMoves} moves over ${elapsed}`\n    }\n    return [red, blue, message, winner]\n  } else if (line.includes('INFO - TIE GAME')) { // Last minute change for ties\n    const matchResults = line.match(/^(.*) (.*) - (.*)\\.v\\.(.*) - INFO - TIE GAME: (.*) > (.*) /)\n    if (matchResults && matchResults.length == 7) {\n      // Remember [0] is the whole string again\n      //          [1] is just the log date\n      //          [2] is just the log time\n      const red = matchResults[3]\n      const blue = matchResults[4]\n      const elapsed = matchResults[5]\n      const maxTime = matchResults[6]\n      const message = `TIE - match exceeded time - stopped at ${elapsed} of ${maxTime} secs`\n      return [red, blue, message, '0'] // 0 means tie to be consistent with other log format\n    }\n  }\n  // Otherwise:\n  return ['', '', '', '']\n}\n\nfunction displayGameName() {\n  const line = getGameName()\n  const [red, blue, message, winner] = parse(line)\n  gameNameDiv.style.display = 'none'\n  gameNameFancyDiv.style.display = 'block'\n  if (winner === '1') {\n    messageDiv.style.color = SMU_RED\n  } else if (winner === '-1') {\n    messageDiv.style.color = SMU_BLUE\n  } else {\n    messageDiv.style.color = '#333333'\n  }\n  setInnerTexts(red, blue, message)\n}\n\nfunction setInnerTexts(red, blue, message) {\n  redNameSpan.innerText = red\n  blueNameSpan.innerText = blue\n  messageDiv.innerText = message\n}\n\nfunction sliderChanged() {\n  if (isEnd()) {\n    messageDiv.style.display = 'block'\n  } else {\n    messageDiv.style.display = 'none'\n  }\n}\n","import {speedDiv} from './elements'\nimport {eventBus} from './event-bus'\nimport {\n  delay as getDelay,\n  setDelay\n} from './model'\n\nconst DEFAULT_DELAY = 666\n\nexport function init() {\n  eventBus.register('file-read', handleFileRead)\n  speedDiv.addEventListener('keydown', handleKeyDown)\n  speedDiv.addEventListener('blur', handleBlur)\n  setPlaybackSpeed(1)\n}\n\nfunction handleFileRead(event) {\n  speedDiv.dataset.disabled = \"false\"\n}\n\n/**\n * Content editable code based on:\n * http://html5doctor.com/the-contenteditable-attribute/\n * http://jsbin.com/owavu3/1/edit?html,js,output\n * https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/code/code_values\n */\nfunction handleKeyDown(event) {\n  if (event.code === 'Escape') {\n    document.execCommand('undo')\n    speedDiv.blur()\n  } else if (event.code === 'Enter' ||\n             event.code === 'NumpadEnter') {\n    speedDiv.blur()\n    event.stopPropagation() // Do not interfere with window controls TODO: Check true\n    event.preventDefault()\n  } else if (event.code == 'Space') {\n    event.stopPropagation()\n  }\n}\n\nfunction handleBlur(event) {\n  const entered = speedDiv.innerText\n  const asNumber = parseFloat(entered)\n  if (asNumber > 0) {\n    setPlaybackSpeed(asNumber)\n  } else {\n    document.execCommand('undo')\n  }\n}\n\nfunction setPlaybackSpeed(playbackSpeed) {\n  if (playbackSpeed < 1) {\n    speedDiv.innerText = `${playbackSpeed.toFixed(2)}x`\n  } else {\n    speedDiv.innerText = `${playbackSpeed}x`\n  }\n  setDelay(DEFAULT_DELAY / playbackSpeed)\n  eventBus.fire('speed-changed')\n}\n","import {init as controlsInit} from './move-selector'\nimport {init as drawInit} from './draw'\nimport {\n  canvas,\n  moveSelector\n} from './elements'\nimport {eventBus} from './event-bus'\nimport {init as fileSelectorInit} from './file-selector'\nimport {init as gameNameInit} from './game-name'\nimport {init as speedInit} from './speed'\n\n// Specific initialization order:\ncontrolsInit()\ndrawInit()\nfileSelectorInit()\ngameNameInit()\nspeedInit()\n\n/**\n * Ensure that the canvas is scaled to the height of the window.\n */\nfunction resizeHandler() {\n  canvas.width = canvas.height = Math.floor(window.innerHeight * 0.70)\n  moveSelector.style.width = `${canvas.width}px`\n  eventBus.fire('window-resized')\n}\nwindow.addEventListener('resize', resizeHandler, false)\nresizeHandler()\n\n/**\n * Handle keyboard events at the top-level.\n */\nwindow.addEventListener('keydown', (event) => {\n  if (event.code === 'ArrowLeft') {\n    eventBus.fire('key-left')\n  } else if (event.code === 'ArrowRight') {\n    eventBus.fire('key-right')\n  } else if (event.code === 'Space') {\n    eventBus.fire('key-pause')\n  }\n})\n"]}